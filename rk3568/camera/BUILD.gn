# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")
import("//drivers/adapter/uhdf2/uhdf.gni")
import("//drivers/peripheral/camera/hal/camera.gni")

action("build_camera_host_config") {
  script = "$hdf_framework_path/tools/hc-gen/build_hcs.py"
  sources = [ rebase_path(
          "$camera_product_name_path/hdf_config/uhdf/camera/hdi_impl/camera_host_config.hcs") ]
  outputs = [ "$target_gen_dir/config/hdi_impl/camera_host_config.hcb" ]
  args = [
    "-o",
    rebase_path(outputs[0]),
    sources[0],
  ]
}

ohos_prebuilt_etc("camera_host_config.hcb") {
  deps = [ ":build_camera_host_config" ]
  hcs_outputs = get_target_outputs(":build_camera_host_config")
  source = hcs_outputs[0]
  relative_install_dir = "hdfconfig"
  subsystem_name = "hdf"
  part_name = "hdf"
}

ohos_prebuilt_etc("config.c") {
  source =
      "$camera_path/pipeline_core/pipeline_impl/src/strategy/config/config.c"
  exec_script(
      "//drivers/framework/tools/hc-gen/build_hcs.py",
      [
        "-o",
        rebase_path(
            "$camera_path/pipeline_core/pipeline_impl/src/strategy/config/config.c"),
        "-t",
        rebase_path(
            "$camera_product_name_path/hdf_config/uhdf/camera/pipeline_core/config.hcs"),
      ],
      "")
}

ohos_prebuilt_etc("params.c") {
  source =
      "$camera_path/pipeline_core/pipeline_impl/src/strategy/config/params.c"
  exec_script(
      "//drivers/framework/tools/hc-gen/build_hcs.py",
      [
        "-o",
        rebase_path(
            "$camera_path/pipeline_core/pipeline_impl/src/strategy/config/params.c"),
        "-t",
        rebase_path(
            "$camera_product_name_path/hdf_config/uhdf/camera/pipeline_core/params.hcs"),
      ],
      "")
}

action("build_ipp_algo_config") {
  script = "$hdf_framework_path/tools/hc-gen/build_hcs.py"
  sources = [ rebase_path(
          "$camera_product_name_path/hdf_config/uhdf/camera/pipeline_core/ipp_algo_config.hcs") ]
  outputs = [ "$target_gen_dir/pipeline_core/ipp_algo_config.hcb" ]
  args = [
    "-o",
    rebase_path(outputs[0]),
    sources[0],
  ]
}

ohos_prebuilt_etc("ipp_algo_config.hcb") {
  deps = [ ":build_ipp_algo_config" ]
  hcs_outputs = get_target_outputs(":build_ipp_algo_config")
  source = hcs_outputs[0]
  relative_install_dir = "hdfconfig"
  subsystem_name = "hdf"
  part_name = "hdf"
}

config("example_config") {
  visibility = [ ":*" ]

  cflags = [
    "-Wno-error",
    "-Wno-unused-function",
    "-Wno-unused-parameter",
  ]
}

group("chipset_build") {
  public_deps = [
    ":camera_host_config.hcb",
    ":config.c",
    ":ipp_algo_config.hcb",
    ":params.c",
    "$camera_device_name_path/camera/src/pipeline_core:camera_ipp_algo_example",
    "//drivers/peripheral/camera/hal/adapter/platform/v4l2/src/driver_adapter:camera_v4l2_adapter",
    "//drivers/peripheral/camera/hal/adapter/platform/v4l2/src/driver_adapter/main_test:v4l2_main",
  ]
}
